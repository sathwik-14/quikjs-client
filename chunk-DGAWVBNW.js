import{b as ue,l as T,m as C,n as R,t as de}from"./chunk-4YICEVEO.js";import{$ as k,Ab as ae,B as ee,Cb as he,F as j,Hb as le,I as H,Oa as re,P as te,Pa as F,R as V,W as E,Wa as ne,Z as se,f as D,fa as ie,j as G,k as y,l as O,lb as oe,mb as ce,o as M,p as Y,x as _,y as X,z as B}from"./chunk-7FJLEQEV.js";import{g as A}from"./chunk-DM275RSA.js";var N={production:!0,client_id:"Ov23lihvthPpaCvERMQt",client_secret:"95c9ac3cee16c72605ba6722f59305acbcf460e9",redirect_uri:"http://localhost:4200/oauth/callback",github_url:"https://github.com"};var $=class{};var J=class{},z=class{};var P=class{constructor(a){this.type=a}},p=class extends P{constructor(a,S=null){super(a),this.info=S}},v=class extends P{constructor(a,S=null){super(a),this.info=S}},m=class extends P{constructor(a,S,e=null){super(a),this.reason=S,this.params=e}};function fe(f){let a=f.replace(/-/g,"+").replace(/_/g,"/");return decodeURIComponent(atob(a).split("").map(function(S){return"%"+("00"+S.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function ge(f){return btoa(f).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}var x=class{constructor(a){this.clientId="",this.redirectUri="",this.postLogoutRedirectUri="",this.redirectUriAsPostLogoutRedirectUriFallback=!0,this.loginUrl="",this.scope="openid profile",this.resource="",this.rngUrl="",this.oidc=!0,this.requestAccessToken=!0,this.options=null,this.issuer="",this.logoutUrl="",this.clearHashAfterLogin=!0,this.tokenEndpoint=null,this.revocationEndpoint=null,this.customTokenParameters=[],this.userinfoEndpoint=null,this.responseType="",this.showDebugInformation=!1,this.silentRefreshRedirectUri="",this.silentRefreshMessagePrefix="",this.silentRefreshShowIFrame=!1,this.siletRefreshTimeout=1e3*20,this.silentRefreshTimeout=1e3*20,this.dummyClientSecret="",this.requireHttps="remoteOnly",this.strictDiscoveryDocumentValidation=!0,this.jwks=null,this.customQueryParams=null,this.silentRefreshIFrameName="angular-oauth-oidc-silent-refresh-iframe",this.timeoutFactor=.75,this.sessionChecksEnabled=!1,this.sessionCheckIntervall=3*1e3,this.sessionCheckIFrameUrl=null,this.sessionCheckIFrameName="angular-oauth-oidc-check-session-iframe",this.disableAtHashCheck=!1,this.skipSubjectCheck=!1,this.useIdTokenHintForSilentRefresh=!1,this.skipIssuerCheck=!1,this.nonceStateSeparator=";",this.useHttpBasicAuth=!1,this.decreaseExpirationBySec=0,this.waitForTokenInMsec=0,this.disablePKCE=!1,this.preserveRequestedRoute=!1,this.disableIdTokenTimer=!1,this.checkOrigin=!1,this.openUri=S=>{location.href=S},a&&Object.assign(this,a)}},I=class{encodeKey(a){return encodeURIComponent(a)}encodeValue(a){return encodeURIComponent(a)}decodeKey(a){return decodeURIComponent(a)}decodeValue(a){return decodeURIComponent(a)}},Q=class{};var be=(()=>{let a=class a{getHashFragmentParams(e){let t=e||window.location.hash;if(t=decodeURIComponent(t),t.indexOf("#")!==0)return{};let s=t.indexOf("?");return s>-1?t=t.substr(s+1):t=t.substr(1),this.parseQueryString(t)}parseQueryString(e){let t={},s,i,r,n,c,h;if(e===null)return t;let g=e.split("&");for(let o=0;o<g.length;o++)s=g[o],i=s.indexOf("="),i===-1?(r=s,n=null):(r=s.substr(0,i),n=s.substr(i+1)),c=decodeURIComponent(r),h=decodeURIComponent(n),c.substr(0,1)==="/"&&(c=c.substr(1)),t[c]=h;return t}};a.\u0275fac=function(t){return new(t||a)},a.\u0275prov=E({token:a,factory:a.\u0275fac});let f=a;return f})(),Se=32;var Je=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);var ze=new Uint8Array(Se);var q=class{};var pe=(()=>{let a=class a extends x{constructor(e,t,s,i,r,n,c,h,g,o){super(),this.ngZone=e,this.http=t,this.config=r,this.urlHelper=n,this.logger=c,this.crypto=h,this.dateTimeService=o,this.discoveryDocumentLoaded=!1,this.state="",this.eventsSubject=new D,this.discoveryDocumentLoadedSubject=new D,this.grantTypesSupported=[],this.inImplicitFlow=!1,this.saveNoncesInLocalStorage=!1,this.debug("angular-oauth2-oidc v10"),this.document=g,r||(r={}),this.discoveryDocumentLoaded$=this.discoveryDocumentLoadedSubject.asObservable(),this.events=this.eventsSubject.asObservable(),i&&(this.tokenValidationHandler=i),r&&this.configure(r);try{s?this.setStorage(s):typeof sessionStorage<"u"&&this.setStorage(sessionStorage)}catch(u){console.error("No OAuthStorage provided and cannot access default (sessionStorage).Consider providing a custom OAuthStorage implementation in your module.",u)}if(this.checkLocalStorageAccessable()){let u=window?.navigator?.userAgent;(u?.includes("MSIE ")||u?.includes("Trident"))&&(this.saveNoncesInLocalStorage=!0)}this.setupRefreshTimer()}checkLocalStorageAccessable(){if(typeof window>"u")return!1;let e="test";try{return typeof window.localStorage>"u"?!1:(localStorage.setItem(e,e),localStorage.removeItem(e),!0)}catch{return!1}}configure(e){Object.assign(this,new x,e),this.config=Object.assign({},new x,e),this.sessionChecksEnabled&&this.setupSessionCheck(),this.configChanged()}configChanged(){this.setupRefreshTimer()}restartSessionChecksIfStillLoggedIn(){this.hasValidIdToken()&&this.initSessionCheck()}restartRefreshTimerIfStillLoggedIn(){this.setupExpirationTimers()}setupSessionCheck(){this.events.pipe(_(e=>e.type==="token_received")).subscribe(()=>{this.initSessionCheck()})}setupAutomaticSilentRefresh(e={},t,s=!0){let i=!0;this.clearAutomaticRefreshTimer(),this.automaticRefreshSubscription=this.events.pipe(V(r=>{r.type==="token_received"?i=!0:r.type==="logout"&&(i=!1)}),_(r=>r.type==="token_expires"&&(t==null||t==="any"||r.info===t)),ee(1e3)).subscribe(()=>{i&&this.refreshInternal(e,s).catch(()=>{this.debug("Automatic silent refresh did not work")})}),this.restartRefreshTimerIfStillLoggedIn()}refreshInternal(e,t){return!this.useSilentRefresh&&this.responseType==="code"?this.refreshToken():this.silentRefresh(e,t)}loadDiscoveryDocumentAndTryLogin(e=null){return this.loadDiscoveryDocument().then(()=>this.tryLogin(e))}loadDiscoveryDocumentAndLogin(e=null){return e=e||{},this.loadDiscoveryDocumentAndTryLogin(e).then(()=>{if(!this.hasValidIdToken()||!this.hasValidAccessToken()){let t=typeof e.state=="string"?e.state:"";return this.initLoginFlow(t),!1}else return!0})}debug(...e){this.showDebugInformation&&this.logger.debug(...e)}validateUrlFromDiscoveryDocument(e){let t=[],s=this.validateUrlForHttps(e),i=this.validateUrlAgainstIssuer(e);return s||t.push("https for all urls required. Also for urls received by discovery."),i||t.push("Every url in discovery document has to start with the issuer url.Also see property strictDiscoveryDocumentValidation."),t}validateUrlForHttps(e){if(!e)return!0;let t=e.toLowerCase();return this.requireHttps===!1||(t.match(/^http:\/\/localhost($|[:/])/)||t.match(/^http:\/\/localhost($|[:/])/))&&this.requireHttps==="remoteOnly"?!0:t.startsWith("https://")}assertUrlNotNullAndCorrectProtocol(e,t){if(!e)throw new Error(`'${t}' should not be null`);if(!this.validateUrlForHttps(e))throw new Error(`'${t}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`)}validateUrlAgainstIssuer(e){return!this.strictDiscoveryDocumentValidation||!e?!0:e.toLowerCase().startsWith(this.issuer.toLowerCase())}setupRefreshTimer(){if(typeof window>"u"){this.debug("timer not supported on this plattform");return}(this.hasValidIdToken()||this.hasValidAccessToken())&&(this.clearAccessTokenTimer(),this.clearIdTokenTimer(),this.setupExpirationTimers()),this.tokenReceivedSubscription&&this.tokenReceivedSubscription.unsubscribe(),this.tokenReceivedSubscription=this.events.pipe(_(e=>e.type==="token_received")).subscribe(()=>{this.clearAccessTokenTimer(),this.clearIdTokenTimer(),this.setupExpirationTimers()})}setupExpirationTimers(){this.hasValidAccessToken()&&this.setupAccessTokenTimer(),!this.disableIdTokenTimer&&this.hasValidIdToken()&&this.setupIdTokenTimer()}setupAccessTokenTimer(){let e=this.getAccessTokenExpiration(),t=this.getAccessTokenStoredAt(),s=this.calcTimeout(t,e);this.ngZone.runOutsideAngular(()=>{this.accessTokenTimeoutSubscription=y(new v("token_expires","access_token")).pipe(j(s)).subscribe(i=>{this.ngZone.run(()=>{this.eventsSubject.next(i)})})})}setupIdTokenTimer(){let e=this.getIdTokenExpiration(),t=this.getIdTokenStoredAt(),s=this.calcTimeout(t,e);this.ngZone.runOutsideAngular(()=>{this.idTokenTimeoutSubscription=y(new v("token_expires","id_token")).pipe(j(s)).subscribe(i=>{this.ngZone.run(()=>{this.eventsSubject.next(i)})})})}stopAutomaticRefresh(){this.clearAccessTokenTimer(),this.clearIdTokenTimer(),this.clearAutomaticRefreshTimer()}clearAccessTokenTimer(){this.accessTokenTimeoutSubscription&&this.accessTokenTimeoutSubscription.unsubscribe()}clearIdTokenTimer(){this.idTokenTimeoutSubscription&&this.idTokenTimeoutSubscription.unsubscribe()}clearAutomaticRefreshTimer(){this.automaticRefreshSubscription&&this.automaticRefreshSubscription.unsubscribe()}calcTimeout(e,t){let s=this.dateTimeService.now(),i=(t-e)*this.timeoutFactor-(s-e),r=Math.max(0,i),n=2147483647;return r>n?n:r}setStorage(e){this._storage=e,this.configChanged()}loadDiscoveryDocument(e=null){return new Promise((t,s)=>{if(e||(e=this.issuer||"",e.endsWith("/")||(e+="/"),e+=".well-known/openid-configuration"),!this.validateUrlForHttps(e)){s("issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");return}this.http.get(e).subscribe(i=>{if(!this.validateDiscoveryDocument(i)){this.eventsSubject.next(new m("discovery_document_validation_error",null)),s("discovery_document_validation_error");return}this.loginUrl=i.authorization_endpoint,this.logoutUrl=i.end_session_endpoint||this.logoutUrl,this.grantTypesSupported=i.grant_types_supported,this.issuer=i.issuer,this.tokenEndpoint=i.token_endpoint,this.userinfoEndpoint=i.userinfo_endpoint||this.userinfoEndpoint,this.jwksUri=i.jwks_uri,this.sessionCheckIFrameUrl=i.check_session_iframe||this.sessionCheckIFrameUrl,this.discoveryDocumentLoaded=!0,this.discoveryDocumentLoadedSubject.next(i),this.revocationEndpoint=i.revocation_endpoint||this.revocationEndpoint,this.sessionChecksEnabled&&this.restartSessionChecksIfStillLoggedIn(),this.loadJwks().then(r=>{let n={discoveryDocument:i,jwks:r},c=new p("discovery_document_loaded",n);this.eventsSubject.next(c),t(c)}).catch(r=>{this.eventsSubject.next(new m("discovery_document_load_error",r)),s(r)})},i=>{this.logger.error("error loading discovery document",i),this.eventsSubject.next(new m("discovery_document_load_error",i)),s(i)})})}loadJwks(){return new Promise((e,t)=>{this.jwksUri?this.http.get(this.jwksUri).subscribe(s=>{this.jwks=s,e(s)},s=>{this.logger.error("error loading jwks",s),this.eventsSubject.next(new m("jwks_load_error",s)),t(s)}):e(null)})}validateDiscoveryDocument(e){let t;return!this.skipIssuerCheck&&e.issuer!==this.issuer?(this.logger.error("invalid issuer in discovery document","expected: "+this.issuer,"current: "+e.issuer),!1):(t=this.validateUrlFromDiscoveryDocument(e.authorization_endpoint),t.length>0?(this.logger.error("error validating authorization_endpoint in discovery document",t),!1):(t=this.validateUrlFromDiscoveryDocument(e.end_session_endpoint),t.length>0?(this.logger.error("error validating end_session_endpoint in discovery document",t),!1):(t=this.validateUrlFromDiscoveryDocument(e.token_endpoint),t.length>0&&this.logger.error("error validating token_endpoint in discovery document",t),t=this.validateUrlFromDiscoveryDocument(e.revocation_endpoint),t.length>0&&this.logger.error("error validating revocation_endpoint in discovery document",t),t=this.validateUrlFromDiscoveryDocument(e.userinfo_endpoint),t.length>0?(this.logger.error("error validating userinfo_endpoint in discovery document",t),!1):(t=this.validateUrlFromDiscoveryDocument(e.jwks_uri),t.length>0?(this.logger.error("error validating jwks_uri in discovery document",t),!1):(this.sessionChecksEnabled&&!e.check_session_iframe&&this.logger.warn("sessionChecksEnabled is activated but discovery document does not contain a check_session_iframe field"),!0)))))}fetchTokenUsingPasswordFlowAndLoadUserProfile(e,t,s=new T){return this.fetchTokenUsingPasswordFlow(e,t,s).then(()=>this.loadUserProfile())}loadUserProfile(){if(!this.hasValidAccessToken())throw new Error("Can not load User Profile without access_token");if(!this.validateUrlForHttps(this.userinfoEndpoint))throw new Error("userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");return new Promise((e,t)=>{let s=new T().set("Authorization","Bearer "+this.getAccessToken());this.http.get(this.userinfoEndpoint,{headers:s,observe:"response",responseType:"text"}).subscribe(i=>{if(this.debug("userinfo received",JSON.stringify(i)),i.headers.get("content-type").startsWith("application/json")){let r=JSON.parse(i.body),n=this.getIdentityClaims()||{};if(!this.skipSubjectCheck&&this.oidc&&(!n.sub||r.sub!==n.sub)){t(`if property oidc is true, the received user-id (sub) has to be the user-id of the user that has logged in with oidc.
if you are not using oidc but just oauth2 password flow set oidc to false`);return}r=Object.assign({},n,r),this._storage.setItem("id_token_claims_obj",JSON.stringify(r)),this.eventsSubject.next(new p("user_profile_loaded")),e({info:r})}else this.debug("userinfo is not JSON, treating it as JWE/JWS"),this.eventsSubject.next(new p("user_profile_loaded")),e(JSON.parse(i.body))},i=>{this.logger.error("error loading user info",i),this.eventsSubject.next(new m("user_profile_load_error",i)),t(i)})})}fetchTokenUsingPasswordFlow(e,t,s=new T){let i={username:e,password:t};return this.fetchTokenUsingGrant("password",i,s)}fetchTokenUsingGrant(e,t,s=new T){this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint,"tokenEndpoint");let i=new C({encoder:new I}).set("grant_type",e).set("scope",this.scope);if(this.useHttpBasicAuth){let r=btoa(`${this.clientId}:${this.dummyClientSecret}`);s=s.set("Authorization","Basic "+r)}if(this.useHttpBasicAuth||(i=i.set("client_id",this.clientId)),!this.useHttpBasicAuth&&this.dummyClientSecret&&(i=i.set("client_secret",this.dummyClientSecret)),this.customQueryParams)for(let r of Object.getOwnPropertyNames(this.customQueryParams))i=i.set(r,this.customQueryParams[r]);for(let r of Object.keys(t))i=i.set(r,t[r]);return s=s.set("Content-Type","application/x-www-form-urlencoded"),new Promise((r,n)=>{this.http.post(this.tokenEndpoint,i,{headers:s}).subscribe(c=>{this.debug("tokenResponse",c),this.storeAccessTokenResponse(c.access_token,c.refresh_token,c.expires_in||this.fallbackAccessTokenExpirationTimeInSec,c.scope,this.extractRecognizedCustomParameters(c)),this.oidc&&c.id_token&&this.processIdToken(c.id_token,c.access_token).then(h=>{this.storeIdToken(h),r(c)}),this.eventsSubject.next(new p("token_received")),r(c)},c=>{this.logger.error("Error performing ${grantType} flow",c),this.eventsSubject.next(new m("token_error",c)),n(c)})})}refreshToken(){return this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint,"tokenEndpoint"),new Promise((e,t)=>{let s=new C({encoder:new I}).set("grant_type","refresh_token").set("scope",this.scope).set("refresh_token",this._storage.getItem("refresh_token")),i=new T().set("Content-Type","application/x-www-form-urlencoded");if(this.useHttpBasicAuth){let r=btoa(`${this.clientId}:${this.dummyClientSecret}`);i=i.set("Authorization","Basic "+r)}if(this.useHttpBasicAuth||(s=s.set("client_id",this.clientId)),!this.useHttpBasicAuth&&this.dummyClientSecret&&(s=s.set("client_secret",this.dummyClientSecret)),this.customQueryParams)for(let r of Object.getOwnPropertyNames(this.customQueryParams))s=s.set(r,this.customQueryParams[r]);this.http.post(this.tokenEndpoint,s,{headers:i}).pipe(te(r=>this.oidc&&r.id_token?G(this.processIdToken(r.id_token,r.access_token,!0)).pipe(V(n=>this.storeIdToken(n)),M(()=>r)):y(r))).subscribe(r=>{this.debug("refresh tokenResponse",r),this.storeAccessTokenResponse(r.access_token,r.refresh_token,r.expires_in||this.fallbackAccessTokenExpirationTimeInSec,r.scope,this.extractRecognizedCustomParameters(r)),this.eventsSubject.next(new p("token_received")),this.eventsSubject.next(new p("token_refreshed")),e(r)},r=>{this.logger.error("Error refreshing token",r),this.eventsSubject.next(new m("token_refresh_error",r)),t(r)})})}removeSilentRefreshEventListener(){this.silentRefreshPostMessageEventListener&&(window.removeEventListener("message",this.silentRefreshPostMessageEventListener),this.silentRefreshPostMessageEventListener=null)}setupSilentRefreshEventListener(){this.removeSilentRefreshEventListener(),this.silentRefreshPostMessageEventListener=e=>{let t=this.processMessageEventMessage(e);this.checkOrigin&&e.origin!==location.origin&&console.error("wrong origin requested silent refresh!"),this.tryLogin({customHashFragment:t,preventClearHashAfterLogin:!0,customRedirectUri:this.silentRefreshRedirectUri||this.redirectUri}).catch(s=>this.debug("tryLogin during silent refresh failed",s))},window.addEventListener("message",this.silentRefreshPostMessageEventListener)}silentRefresh(e={},t=!0){let s=this.getIdentityClaims()||{};if(this.useIdTokenHintForSilentRefresh&&this.hasValidIdToken()&&(e.id_token_hint=this.getIdToken()),!this.validateUrlForHttps(this.loginUrl))throw new Error("loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");if(typeof this.document>"u")throw new Error("silent refresh is not supported on this platform");let i=this.document.getElementById(this.silentRefreshIFrameName);i&&this.document.body.removeChild(i),this.silentRefreshSubject=s.sub;let r=this.document.createElement("iframe");r.id=this.silentRefreshIFrameName,this.setupSilentRefreshEventListener();let n=this.silentRefreshRedirectUri||this.redirectUri;this.createLoginUrl(null,null,n,t,e).then(o=>{r.setAttribute("src",o),this.silentRefreshShowIFrame||(r.style.display="none"),this.document.body.appendChild(r)});let c=this.events.pipe(_(o=>o instanceof m),H()),h=this.events.pipe(_(o=>o.type==="token_received"),H()),g=y(new m("silent_refresh_timeout",null)).pipe(j(this.silentRefreshTimeout));return X([c,h,g]).pipe(M(o=>{if(o instanceof m)throw o.type==="silent_refresh_timeout"?this.eventsSubject.next(o):(o=new m("silent_refresh_error",o),this.eventsSubject.next(o)),o;return o.type==="token_received"&&(o=new p("silently_refreshed"),this.eventsSubject.next(o)),o})).toPromise()}initImplicitFlowInPopup(e){return this.initLoginFlowInPopup(e)}initLoginFlowInPopup(e){return e=e||{},this.createLoginUrl(null,null,this.silentRefreshRedirectUri,!1,{display:"popup"}).then(t=>new Promise((s,i)=>{let n=null;e.windowRef?e.windowRef&&!e.windowRef.closed&&(n=e.windowRef,n.location.href=t):n=window.open(t,"ngx-oauth2-oidc-login",this.calculatePopupFeatures(e));let c,h=w=>{this.tryLogin({customHashFragment:w,preventClearHashAfterLogin:!0,customRedirectUri:this.silentRefreshRedirectUri}).then(()=>{o(),s(!0)},b=>{o(),i(b)})},g=()=>{(!n||n.closed)&&(o(),i(new m("popup_closed",{})))};n?c=window.setInterval(g,500):i(new m("popup_blocked",{}));let o=()=>{window.clearInterval(c),window.removeEventListener("storage",l),window.removeEventListener("message",u),n!==null&&n.close(),n=null},u=w=>{let b=this.processMessageEventMessage(w);b&&b!==null?(window.removeEventListener("storage",l),h(b)):console.log("false event firing")},l=w=>{w.key==="auth_hash"&&(window.removeEventListener("message",u),h(w.newValue))};window.addEventListener("message",u),window.addEventListener("storage",l)}))}calculatePopupFeatures(e){let t=e.height||470,s=e.width||500,i=window.screenLeft+(window.outerWidth-s)/2,r=window.screenTop+(window.outerHeight-t)/2;return`location=no,toolbar=no,width=${s},height=${t},top=${r},left=${i}`}processMessageEventMessage(e){let t="#";if(this.silentRefreshMessagePrefix&&(t+=this.silentRefreshMessagePrefix),!e||!e.data||typeof e.data!="string")return;let s=e.data;if(s.startsWith(t))return"#"+s.substr(t.length)}canPerformSessionCheck(){return this.sessionChecksEnabled?this.sessionCheckIFrameUrl?this.getSessionState()?!(typeof this.document>"u"):(console.warn("sessionChecksEnabled is activated but there is no session_state"),!1):(console.warn("sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl"),!1):!1}setupSessionCheckEventListener(){this.removeSessionCheckEventListener(),this.sessionCheckEventListener=e=>{let t=e.origin.toLowerCase(),s=this.issuer.toLowerCase();if(this.debug("sessionCheckEventListener"),!s.startsWith(t)){this.debug("sessionCheckEventListener","wrong origin",t,"expected",s,"event",e);return}switch(e.data){case"unchanged":this.ngZone.run(()=>{this.handleSessionUnchanged()});break;case"changed":this.ngZone.run(()=>{this.handleSessionChange()});break;case"error":this.ngZone.run(()=>{this.handleSessionError()});break}this.debug("got info from session check inframe",e)},this.ngZone.runOutsideAngular(()=>{window.addEventListener("message",this.sessionCheckEventListener)})}handleSessionUnchanged(){this.debug("session check","session unchanged"),this.eventsSubject.next(new v("session_unchanged"))}handleSessionChange(){this.eventsSubject.next(new v("session_changed")),this.stopSessionCheckTimer(),!this.useSilentRefresh&&this.responseType==="code"?this.refreshToken().then(()=>{this.debug("token refresh after session change worked")}).catch(()=>{this.debug("token refresh did not work after session changed"),this.eventsSubject.next(new v("session_terminated")),this.logOut(!0)}):this.silentRefreshRedirectUri?(this.silentRefresh().catch(()=>this.debug("silent refresh failed after session changed")),this.waitForSilentRefreshAfterSessionChange()):(this.eventsSubject.next(new v("session_terminated")),this.logOut(!0))}waitForSilentRefreshAfterSessionChange(){this.events.pipe(_(e=>e.type==="silently_refreshed"||e.type==="silent_refresh_timeout"||e.type==="silent_refresh_error"),H()).subscribe(e=>{e.type!=="silently_refreshed"&&(this.debug("silent refresh did not work after session changed"),this.eventsSubject.next(new v("session_terminated")),this.logOut(!0))})}handleSessionError(){this.stopSessionCheckTimer(),this.eventsSubject.next(new v("session_error"))}removeSessionCheckEventListener(){this.sessionCheckEventListener&&(window.removeEventListener("message",this.sessionCheckEventListener),this.sessionCheckEventListener=null)}initSessionCheck(){if(!this.canPerformSessionCheck())return;let e=this.document.getElementById(this.sessionCheckIFrameName);e&&this.document.body.removeChild(e);let t=this.document.createElement("iframe");t.id=this.sessionCheckIFrameName,this.setupSessionCheckEventListener();let s=this.sessionCheckIFrameUrl;t.setAttribute("src",s),t.style.display="none",this.document.body.appendChild(t),this.startSessionCheckTimer()}startSessionCheckTimer(){this.stopSessionCheckTimer(),this.ngZone.runOutsideAngular(()=>{this.sessionCheckTimer=setInterval(this.checkSession.bind(this),this.sessionCheckIntervall)})}stopSessionCheckTimer(){this.sessionCheckTimer&&(clearInterval(this.sessionCheckTimer),this.sessionCheckTimer=null)}checkSession(){let e=this.document.getElementById(this.sessionCheckIFrameName);e||this.logger.warn("checkSession did not find iframe",this.sessionCheckIFrameName);let t=this.getSessionState();t||this.stopSessionCheckTimer();let s=this.clientId+" "+t;e.contentWindow.postMessage(s,this.issuer)}createLoginUrl(){return A(this,arguments,function*(e="",t="",s="",i=!1,r={}){let n=this,c;s?c=s:c=this.redirectUri;let h=yield this.createAndSaveNonce();if(e?e=h+this.config.nonceStateSeparator+encodeURIComponent(e):e=h,!this.requestAccessToken&&!this.oidc)throw new Error("Either requestAccessToken or oidc or both must be true");this.config.responseType?this.responseType=this.config.responseType:this.oidc&&this.requestAccessToken?this.responseType="id_token token":this.oidc&&!this.requestAccessToken?this.responseType="id_token":this.responseType="token";let g=n.loginUrl.indexOf("?")>-1?"&":"?",o=n.scope;this.oidc&&!o.match(/(^|\s)openid($|\s)/)&&(o="openid "+o);let u=n.loginUrl+g+"response_type="+encodeURIComponent(n.responseType)+"&client_id="+encodeURIComponent(n.clientId)+"&state="+encodeURIComponent(e)+"&redirect_uri="+encodeURIComponent(c)+"&scope="+encodeURIComponent(o);if(this.responseType.includes("code")&&!this.disablePKCE){let[l,w]=yield this.createChallangeVerifierPairForPKCE();this.saveNoncesInLocalStorage&&typeof window.localStorage<"u"?localStorage.setItem("PKCE_verifier",w):this._storage.setItem("PKCE_verifier",w),u+="&code_challenge="+l,u+="&code_challenge_method=S256"}t&&(u+="&login_hint="+encodeURIComponent(t)),n.resource&&(u+="&resource="+encodeURIComponent(n.resource)),n.oidc&&(u+="&nonce="+encodeURIComponent(h)),i&&(u+="&prompt=none");for(let l of Object.keys(r))u+="&"+encodeURIComponent(l)+"="+encodeURIComponent(r[l]);if(this.customQueryParams)for(let l of Object.getOwnPropertyNames(this.customQueryParams))u+="&"+l+"="+encodeURIComponent(this.customQueryParams[l]);return u})}initImplicitFlowInternal(e="",t=""){if(this.inImplicitFlow)return;if(this.inImplicitFlow=!0,!this.validateUrlForHttps(this.loginUrl))throw new Error("loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");let s={},i=null;typeof t=="string"?i=t:typeof t=="object"&&(s=t),this.createLoginUrl(e,i,null,!1,s).then(this.config.openUri).catch(r=>{console.error("Error in initImplicitFlow",r),this.inImplicitFlow=!1})}initImplicitFlow(e="",t=""){this.loginUrl!==""?this.initImplicitFlowInternal(e,t):this.events.pipe(_(s=>s.type==="discovery_document_loaded")).subscribe(()=>this.initImplicitFlowInternal(e,t))}resetImplicitFlow(){this.inImplicitFlow=!1}callOnTokenReceivedIfExists(e){let t=this;if(e.onTokenReceived){let s={idClaims:t.getIdentityClaims(),idToken:t.getIdToken(),accessToken:t.getAccessToken(),state:t.state};e.onTokenReceived(s)}}storeAccessTokenResponse(e,t,s,i,r){if(this._storage.setItem("access_token",e),i&&!Array.isArray(i)?this._storage.setItem("granted_scopes",JSON.stringify(i.split(" "))):i&&Array.isArray(i)&&this._storage.setItem("granted_scopes",JSON.stringify(i)),this._storage.setItem("access_token_stored_at",""+this.dateTimeService.now()),s){let n=s*1e3,h=this.dateTimeService.new().getTime()+n;this._storage.setItem("expires_at",""+h)}t&&this._storage.setItem("refresh_token",t),r&&r.forEach((n,c)=>{this._storage.setItem(c,n)})}tryLogin(e=null){return this.config.responseType==="code"?this.tryLoginCodeFlow(e).then(()=>!0):this.tryLoginImplicitFlow(e)}parseQueryString(e){return!e||e.length===0?{}:(e.charAt(0)==="?"&&(e=e.substr(1)),this.urlHelper.parseQueryString(e))}tryLoginCodeFlow(e=null){return A(this,null,function*(){e=e||{};let t=e.customHashFragment?e.customHashFragment.substring(1):window.location.search,s=this.getCodePartsFromUrl(t),i=s.code,r=s.state,n=s.session_state;if(!e.preventClearHashAfterLogin){let g=location.origin+location.pathname+location.search.replace(/code=[^&$]*/,"").replace(/scope=[^&$]*/,"").replace(/state=[^&$]*/,"").replace(/session_state=[^&$]*/,"").replace(/^\?&/,"?").replace(/&$/,"").replace(/^\?$/,"").replace(/&+/g,"&").replace(/\?&/,"?").replace(/\?$/,"")+location.hash;history.replaceState(null,window.name,g)}let[c,h]=this.parseState(r);if(this.state=h,s.error){this.debug("error trying to login"),this.handleLoginError(e,s);let g=new m("code_error",{},s);return this.eventsSubject.next(g),Promise.reject(g)}if(!e.disableNonceCheck){if(!c)return this.saveRequestedRoute(),Promise.resolve();if(!e.disableOAuth2StateCheck&&!this.validateNonce(c)){let o=new m("invalid_nonce_in_state",null);return this.eventsSubject.next(o),Promise.reject(o)}}return this.storeSessionState(n),i&&(yield this.getTokenFromCode(i,e),this.restoreRequestedRoute()),Promise.resolve()})}saveRequestedRoute(){this.config.preserveRequestedRoute&&this._storage.setItem("requested_route",window.location.pathname+window.location.search)}restoreRequestedRoute(){let e=this._storage.getItem("requested_route");e&&history.replaceState(null,"",window.location.origin+e)}getCodePartsFromUrl(e){return!e||e.length===0?this.urlHelper.getHashFragmentParams():(e.charAt(0)==="?"&&(e=e.substr(1)),this.urlHelper.parseQueryString(e))}getTokenFromCode(e,t){let s=new C({encoder:new I}).set("grant_type","authorization_code").set("code",e).set("redirect_uri",t.customRedirectUri||this.redirectUri);if(!this.disablePKCE){let i;this.saveNoncesInLocalStorage&&typeof window.localStorage<"u"?i=localStorage.getItem("PKCE_verifier"):i=this._storage.getItem("PKCE_verifier"),i?s=s.set("code_verifier",i):console.warn("No PKCE verifier found in oauth storage!")}return this.fetchAndProcessToken(s,t)}fetchAndProcessToken(e,t){t=t||{},this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint,"tokenEndpoint");let s=new T().set("Content-Type","application/x-www-form-urlencoded");if(this.useHttpBasicAuth){let i=btoa(`${this.clientId}:${this.dummyClientSecret}`);s=s.set("Authorization","Basic "+i)}return this.useHttpBasicAuth||(e=e.set("client_id",this.clientId)),!this.useHttpBasicAuth&&this.dummyClientSecret&&(e=e.set("client_secret",this.dummyClientSecret)),new Promise((i,r)=>{if(this.customQueryParams)for(let n of Object.getOwnPropertyNames(this.customQueryParams))e=e.set(n,this.customQueryParams[n]);this.http.post(this.tokenEndpoint,e,{headers:s}).subscribe(n=>{this.debug("refresh tokenResponse",n),this.storeAccessTokenResponse(n.access_token,n.refresh_token,n.expires_in||this.fallbackAccessTokenExpirationTimeInSec,n.scope,this.extractRecognizedCustomParameters(n)),this.oidc&&n.id_token?this.processIdToken(n.id_token,n.access_token,t.disableNonceCheck).then(c=>{this.storeIdToken(c),this.eventsSubject.next(new p("token_received")),this.eventsSubject.next(new p("token_refreshed")),i(n)}).catch(c=>{this.eventsSubject.next(new m("token_validation_error",c)),console.error("Error validating tokens"),console.error(c),r(c)}):(this.eventsSubject.next(new p("token_received")),this.eventsSubject.next(new p("token_refreshed")),i(n))},n=>{console.error("Error getting token",n),this.eventsSubject.next(new m("token_refresh_error",n)),r(n)})})}tryLoginImplicitFlow(e=null){e=e||{};let t;e.customHashFragment?t=this.urlHelper.getHashFragmentParams(e.customHashFragment):t=this.urlHelper.getHashFragmentParams(),this.debug("parsed url",t);let s=t.state,[i,r]=this.parseState(s);if(this.state=r,t.error){this.debug("error trying to login"),this.handleLoginError(e,t);let o=new m("token_error",{},t);return this.eventsSubject.next(o),Promise.reject(o)}let n=t.access_token,c=t.id_token,h=t.session_state,g=t.scope;if(!this.requestAccessToken&&!this.oidc)return Promise.reject("Either requestAccessToken or oidc (or both) must be true.");if(this.requestAccessToken&&!n||this.requestAccessToken&&!e.disableOAuth2StateCheck&&!s||this.oidc&&!c)return Promise.resolve(!1);if(this.sessionChecksEnabled&&!h&&this.logger.warn("session checks (Session Status Change Notification) were activated in the configuration but the id_token does not contain a session_state claim"),this.requestAccessToken&&!e.disableNonceCheck&&!this.validateNonce(i)){let u=new m("invalid_nonce_in_state",null);return this.eventsSubject.next(u),Promise.reject(u)}return this.requestAccessToken&&this.storeAccessTokenResponse(n,null,t.expires_in||this.fallbackAccessTokenExpirationTimeInSec,g),this.oidc?this.processIdToken(c,n,e.disableNonceCheck).then(o=>e.validationHandler?e.validationHandler({accessToken:n,idClaims:o.idTokenClaims,idToken:o.idToken,state:s}).then(()=>o):o).then(o=>(this.storeIdToken(o),this.storeSessionState(h),this.clearHashAfterLogin&&!e.preventClearHashAfterLogin&&this.clearLocationHash(),this.eventsSubject.next(new p("token_received")),this.callOnTokenReceivedIfExists(e),this.inImplicitFlow=!1,!0)).catch(o=>(this.eventsSubject.next(new m("token_validation_error",o)),this.logger.error("Error validating tokens"),this.logger.error(o),Promise.reject(o))):(this.eventsSubject.next(new p("token_received")),this.clearHashAfterLogin&&!e.preventClearHashAfterLogin&&this.clearLocationHash(),this.callOnTokenReceivedIfExists(e),Promise.resolve(!0))}parseState(e){let t=e,s="";if(e){let i=e.indexOf(this.config.nonceStateSeparator);i>-1&&(t=e.substr(0,i),s=e.substr(i+this.config.nonceStateSeparator.length))}return[t,s]}validateNonce(e){let t;return this.saveNoncesInLocalStorage&&typeof window.localStorage<"u"?t=localStorage.getItem("nonce"):t=this._storage.getItem("nonce"),t!==e?(console.error("Validating access_token failed, wrong state/nonce.",t,e),!1):!0}storeIdToken(e){this._storage.setItem("id_token",e.idToken),this._storage.setItem("id_token_claims_obj",e.idTokenClaimsJson),this._storage.setItem("id_token_expires_at",""+e.idTokenExpiresAt),this._storage.setItem("id_token_stored_at",""+this.dateTimeService.now())}storeSessionState(e){this._storage.setItem("session_state",e)}getSessionState(){return this._storage.getItem("session_state")}handleLoginError(e,t){e.onLoginError&&e.onLoginError(t),this.clearHashAfterLogin&&!e.preventClearHashAfterLogin&&this.clearLocationHash()}getClockSkewInMsec(e=6e5){return!this.clockSkewInSec&&this.clockSkewInSec!==0?e:this.clockSkewInSec*1e3}processIdToken(e,t,s=!1){let i=e.split("."),r=this.padBase64(i[0]),n=fe(r),c=JSON.parse(n),h=this.padBase64(i[1]),g=fe(h),o=JSON.parse(g),u;if(this.saveNoncesInLocalStorage&&typeof window.localStorage<"u"?u=localStorage.getItem("nonce"):u=this._storage.getItem("nonce"),Array.isArray(o.aud)){if(o.aud.every(d=>d!==this.clientId)){let d="Wrong audience: "+o.aud.join(",");return this.logger.warn(d),Promise.reject(d)}}else if(o.aud!==this.clientId){let d="Wrong audience: "+o.aud;return this.logger.warn(d),Promise.reject(d)}if(!o.sub){let d="No sub claim in id_token";return this.logger.warn(d),Promise.reject(d)}if(this.sessionChecksEnabled&&this.silentRefreshSubject&&this.silentRefreshSubject!==o.sub){let d=`After refreshing, we got an id_token for another user (sub). Expected sub: ${this.silentRefreshSubject}, received sub: ${o.sub}`;return this.logger.warn(d),Promise.reject(d)}if(!o.iat){let d="No iat claim in id_token";return this.logger.warn(d),Promise.reject(d)}if(!this.skipIssuerCheck&&o.iss!==this.issuer){let d="Wrong issuer: "+o.iss;return this.logger.warn(d),Promise.reject(d)}if(!s&&o.nonce!==u){let d="Wrong nonce: "+o.nonce;return this.logger.warn(d),Promise.reject(d)}if(Object.prototype.hasOwnProperty.call(this,"responseType")&&(this.responseType==="code"||this.responseType==="id_token")&&(this.disableAtHashCheck=!0),!this.disableAtHashCheck&&this.requestAccessToken&&!o.at_hash){let d="An at_hash is needed!";return this.logger.warn(d),Promise.reject(d)}let l=this.dateTimeService.now(),w=o.iat*1e3,b=o.exp*1e3,K=this.getClockSkewInMsec();if(w-K>=l||b+K-this.decreaseExpirationBySec<=l){let d="Token has expired";return console.error(d),console.error({now:l,issuedAtMSec:w,expiresAtMSec:b}),Promise.reject(d)}let U={accessToken:t,idToken:e,jwks:this.jwks,idTokenClaims:o,idTokenHeader:c,loadKeys:()=>this.loadJwks()};return this.disableAtHashCheck?this.checkSignature(U).then(()=>({idToken:e,idTokenClaims:o,idTokenClaimsJson:g,idTokenHeader:c,idTokenHeaderJson:n,idTokenExpiresAt:b})):this.checkAtHash(U).then(d=>{if(!this.disableAtHashCheck&&this.requestAccessToken&&!d){let L="Wrong at_hash";return this.logger.warn(L),Promise.reject(L)}return this.checkSignature(U).then(()=>{let L=!this.disableAtHashCheck,W={idToken:e,idTokenClaims:o,idTokenClaimsJson:g,idTokenHeader:c,idTokenHeaderJson:n,idTokenExpiresAt:b};return L?this.checkAtHash(U).then(we=>{if(this.requestAccessToken&&!we){let Z="Wrong at_hash";return this.logger.warn(Z),Promise.reject(Z)}else return W}):W})})}getIdentityClaims(){let e=this._storage.getItem("id_token_claims_obj");return e?JSON.parse(e):null}getGrantedScopes(){let e=this._storage.getItem("granted_scopes");return e?JSON.parse(e):null}getIdToken(){return this._storage?this._storage.getItem("id_token"):null}padBase64(e){for(;e.length%4!==0;)e+="=";return e}getAccessToken(){return this._storage?this._storage.getItem("access_token"):null}getRefreshToken(){return this._storage?this._storage.getItem("refresh_token"):null}getAccessTokenExpiration(){return this._storage.getItem("expires_at")?parseInt(this._storage.getItem("expires_at"),10):null}getAccessTokenStoredAt(){return parseInt(this._storage.getItem("access_token_stored_at"),10)}getIdTokenStoredAt(){return parseInt(this._storage.getItem("id_token_stored_at"),10)}getIdTokenExpiration(){return this._storage.getItem("id_token_expires_at")?parseInt(this._storage.getItem("id_token_expires_at"),10):null}hasValidAccessToken(){if(this.getAccessToken()){let e=this._storage.getItem("expires_at"),t=this.dateTimeService.new();return!(e&&parseInt(e,10)-this.decreaseExpirationBySec<t.getTime()-this.getClockSkewInMsec())}return!1}hasValidIdToken(){if(this.getIdToken()){let e=this._storage.getItem("id_token_expires_at"),t=this.dateTimeService.new();return!(e&&parseInt(e,10)-this.decreaseExpirationBySec<t.getTime()-this.getClockSkewInMsec())}return!1}getCustomTokenResponseProperty(e){return this._storage&&this.config.customTokenParameters&&this.config.customTokenParameters.indexOf(e)>=0&&this._storage.getItem(e)!==null?JSON.parse(this._storage.getItem(e)):null}authorizationHeader(){return"Bearer "+this.getAccessToken()}logOut(e={},t=""){let s=!1;typeof e=="boolean"&&(s=e,e={});let i=this.getIdToken();if(this._storage.removeItem("access_token"),this._storage.removeItem("id_token"),this._storage.removeItem("refresh_token"),this.saveNoncesInLocalStorage?(localStorage.removeItem("nonce"),localStorage.removeItem("PKCE_verifier")):(this._storage.removeItem("nonce"),this._storage.removeItem("PKCE_verifier")),this._storage.removeItem("expires_at"),this._storage.removeItem("id_token_claims_obj"),this._storage.removeItem("id_token_expires_at"),this._storage.removeItem("id_token_stored_at"),this._storage.removeItem("access_token_stored_at"),this._storage.removeItem("granted_scopes"),this._storage.removeItem("session_state"),this.config.customTokenParameters&&this.config.customTokenParameters.forEach(n=>this._storage.removeItem(n)),this.silentRefreshSubject=null,this.eventsSubject.next(new v("logout")),!this.logoutUrl||s)return;let r;if(!this.validateUrlForHttps(this.logoutUrl))throw new Error("logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");if(this.logoutUrl.indexOf("{{")>-1)r=this.logoutUrl.replace(/\{\{id_token\}\}/,encodeURIComponent(i)).replace(/\{\{client_id\}\}/,encodeURIComponent(this.clientId));else{let n=new C({encoder:new I});i&&(n=n.set("id_token_hint",i));let c=this.postLogoutRedirectUri||this.redirectUriAsPostLogoutRedirectUriFallback&&this.redirectUri||"";c&&(n=n.set("post_logout_redirect_uri",c),t&&(n=n.set("state",t)));for(let h in e)n=n.set(h,e[h]);r=this.logoutUrl+(this.logoutUrl.indexOf("?")>-1?"&":"?")+n.toString()}this.config.openUri(r)}createAndSaveNonce(){let e=this;return this.createNonce().then(function(t){return e.saveNoncesInLocalStorage&&typeof window.localStorage<"u"?localStorage.setItem("nonce",t):e._storage.setItem("nonce",t),t})}ngOnDestroy(){this.clearAccessTokenTimer(),this.clearIdTokenTimer(),this.removeSilentRefreshEventListener();let e=this.document.getElementById(this.silentRefreshIFrameName);e&&e.remove(),this.stopSessionCheckTimer(),this.removeSessionCheckEventListener();let t=this.document.getElementById(this.sessionCheckIFrameName);t&&t.remove()}createNonce(){return new Promise(e=>{if(this.rngUrl)throw new Error("createNonce with rng-web-api has not been implemented so far");let t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~",s=45,i="",r=typeof self>"u"?null:self.crypto||self.msCrypto;if(r){let n=new Uint8Array(s);r.getRandomValues(n),n.map||(n.map=Array.prototype.map),n=n.map(c=>t.charCodeAt(c%t.length)),i=String.fromCharCode.apply(null,n)}else for(;0<s--;)i+=t[Math.random()*t.length|0];e(ge(i))})}checkAtHash(e){return A(this,null,function*(){return this.tokenValidationHandler?this.tokenValidationHandler.validateAtHash(e):(this.logger.warn("No tokenValidationHandler configured. Cannot check at_hash."),!0)})}checkSignature(e){return this.tokenValidationHandler?this.tokenValidationHandler.validateSignature(e):(this.logger.warn("No tokenValidationHandler configured. Cannot check signature."),Promise.resolve(null))}initLoginFlow(e="",t={}){return this.responseType==="code"?this.initCodeFlow(e,t):this.initImplicitFlow(e,t)}initCodeFlow(e="",t={}){this.loginUrl!==""?this.initCodeFlowInternal(e,t):this.events.pipe(_(s=>s.type==="discovery_document_loaded")).subscribe(()=>this.initCodeFlowInternal(e,t))}initCodeFlowInternal(e="",t={}){if(!this.validateUrlForHttps(this.loginUrl))throw new Error("loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");let s={},i=null;typeof t=="string"?i=t:typeof t=="object"&&(s=t),this.createLoginUrl(e,i,null,!1,s).then(this.config.openUri).catch(r=>{console.error("Error in initAuthorizationCodeFlow"),console.error(r)})}createChallangeVerifierPairForPKCE(){return A(this,null,function*(){if(!this.crypto)throw new Error("PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?");let e=yield this.createNonce(),t=yield this.crypto.calcHash(e,"sha-256");return[ge(t),e]})}extractRecognizedCustomParameters(e){let t=new Map;return this.config.customTokenParameters&&this.config.customTokenParameters.forEach(s=>{e[s]&&t.set(s,JSON.stringify(e[s]))}),t}revokeTokenAndLogout(e={},t=!1){let s=this.revocationEndpoint,i=this.getAccessToken(),r=this.getRefreshToken();if(!i)return Promise.resolve();let n=new C({encoder:new I}),c=new T().set("Content-Type","application/x-www-form-urlencoded");if(this.useHttpBasicAuth){let h=btoa(`${this.clientId}:${this.dummyClientSecret}`);c=c.set("Authorization","Basic "+h)}if(this.useHttpBasicAuth||(n=n.set("client_id",this.clientId)),!this.useHttpBasicAuth&&this.dummyClientSecret&&(n=n.set("client_secret",this.dummyClientSecret)),this.customQueryParams)for(let h of Object.getOwnPropertyNames(this.customQueryParams))n=n.set(h,this.customQueryParams[h]);return new Promise((h,g)=>{let o,u;if(i){let l=n.set("token",i).set("token_type_hint","access_token");o=this.http.post(s,l,{headers:c})}else o=y(null);if(r){let l=n.set("token",r).set("token_type_hint","refresh_token");u=this.http.post(s,l,{headers:c})}else u=y(null);t&&(o=o.pipe(B(l=>l.status===0?y(null):O(l))),u=u.pipe(B(l=>l.status===0?y(null):O(l)))),Y([o,u]).subscribe(l=>{this.logOut(e),h(l),this.logger.info("Token successfully revoked")},l=>{this.logger.error("Error revoking token",l),this.eventsSubject.next(new m("token_revoke_error",l)),g(l)})})}clearLocationHash(){location.hash!=""&&(location.hash="")}};a.\u0275fac=function(t){return new(t||a)(k(ne),k(R),k(z,8),k(Q,8),k(x,8),k(be),k(J),k(q,8),k(ue),k($))},a.\u0275prov=E({token:a,factory:a.\u0275fac});let f=a;return f})();var Qe=new se("AUTH_CONFIG");var ke=(()=>{let a=class a{constructor(e){this.oAuthService=e,this.initConfiguration()}initConfiguration(){let e={loginUrl:"https://github.com/login/oauth/authorize",redirectUri:N.redirect_uri,responseType:"code",clientId:N.client_id,scope:"read:user user:email",dummyClientSecret:N.client_secret,showDebugInformation:!0};this.oAuthService.configure(e),this.oAuthService.loadDiscoveryDocumentAndTryLogin()}login(){this.oAuthService.initLoginFlow()}logout(){this.oAuthService.revokeTokenAndLogout(),this.oAuthService.logOut()}getProfile(){this.oAuthService.getIdentityClaims()}getToken(){this.oAuthService.getAccessToken()}};a.\u0275fac=function(t){return new(t||a)(k(pe))},a.\u0275prov=E({token:a,factory:a.\u0275fac,providedIn:"root"});let f=a;return f})();var Ze=(()=>{let a=class a{constructor(e,t,s){this.authService=e,this._http=t,s.queryParamMap.subscribe({next:i=>{this.code=i.get("code")??"",t.post("http://localhost:4201/auth/login",{code:this.code}).subscribe({next:r=>console.log(r),error:r=>console.error(r)})},error:i=>console.error(i)})}};a.\u0275fac=function(t){return new(t||a)(F(ke),F(R),F(de))},a.\u0275cmp=ie({type:a,selectors:[["app-callback"]],standalone:!0,features:[le],decls:2,vars:1,template:function(t,s){t&1&&(oe(0,"p"),ae(1),ce()),t&2&&(re(),he("callback got code ",s.code,""))}});let f=a;return f})();export{Ze as CallbackComponent};
